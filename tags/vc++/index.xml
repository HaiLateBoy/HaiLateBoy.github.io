<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>VC&#43;&#43; - Tag - Masimaro&#39;s blog</title>
        <link>http://HaiLateBoy.github.io/tags/vc&#43;&#43;/</link>
        <description>VC&#43;&#43; - Tag - Masimaro&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>liu1793222129@163.com (Masimaro)</managingEditor>
            <webMaster>liu1793222129@163.com (Masimaro)</webMaster><lastBuildDate>Sun, 16 Sep 2018 10:36:23 &#43;0000</lastBuildDate><atom:link href="http://HaiLateBoy.github.io/tags/vc&#43;&#43;/" rel="self" type="application/rss+xml" /><item>
    <title>VC 在调用main函数之前的操作</title>
    <link>http://HaiLateBoy.github.io/posts/post-before-call-main/</link>
    <pubDate>Sun, 16 Sep 2018 10:36:23 &#43;0000</pubDate>
    <author>Masimaro</author>
    <guid>http://HaiLateBoy.github.io/posts/post-before-call-main/</guid>
    <description><![CDATA[在C/C++语言中规定，程序是从main函数开始，也就是C/C++语言中以main函数作为程序的入口，但是操作系统是如何加载这个main函数]]></description>
</item>
<item>
    <title>C 堆内存管理</title>
    <link>http://HaiLateBoy.github.io/posts/heap-manage/</link>
    <pubDate>Sat, 01 Sep 2018 09:44:24 &#43;0000</pubDate>
    <author>Masimaro</author>
    <guid>http://HaiLateBoy.github.io/posts/heap-manage/</guid>
    <description><![CDATA[在Win32 程序中每个进程都占有4GB的虚拟地址空间，这4G的地址空间内部又被分为代码段，全局变量段堆段和栈段，栈内存由函数使用，用来存储函]]></description>
</item>
<item>
    <title>VC&#43;&#43; 崩溃处理以及打印调用堆栈</title>
    <link>http://HaiLateBoy.github.io/posts/vc-exception-callstack/</link>
    <pubDate>Tue, 28 Aug 2018 20:59:54 &#43;0000</pubDate>
    <author>Masimaro</author>
    <guid>http://HaiLateBoy.github.io/posts/vc-exception-callstack/</guid>
    <description><![CDATA[我们在程序发布后总会面临崩溃的情况，这个时候一般很难重现或者很难定位到程序崩溃的位置，之前有方法在程序崩溃的时候记录dump文件然后通过wi]]></description>
</item>
<item>
    <title>ATL模板库中的OLEDB与ADO</title>
    <link>http://HaiLateBoy.github.io/posts/oledb-and-ado-16/</link>
    <pubDate>Sun, 27 May 2018 10:47:42 &#43;0000</pubDate>
    <author>Masimaro</author>
    <guid>http://HaiLateBoy.github.io/posts/oledb-and-ado-16/</guid>
    <description><![CDATA[上次将OLEDB的所有内容基本上都说完了，从之前的示例上来看OLEDB中有许多变量的定义，什么结果集对象、session对象、命令对象，还有]]></description>
</item>
<item>
    <title>OLEDB事务</title>
    <link>http://HaiLateBoy.github.io/posts/oledb-and-ado-15/</link>
    <pubDate>Sat, 19 May 2018 10:20:12 &#43;0000</pubDate>
    <author>Masimaro</author>
    <guid>http://HaiLateBoy.github.io/posts/oledb-and-ado-15/</guid>
    <description><![CDATA[学过数据的人一般都知道事务的重要性，事务是一种对数据源的一系列更新进行分组或者批处理以便当所有更新都成功时同时提交更新，或者任意一个更新失败]]></description>
</item>
<item>
    <title>OLEDB 简单数据查找定位和错误处理</title>
    <link>http://HaiLateBoy.github.io/posts/oledb-and-ado-14/</link>
    <pubDate>Fri, 11 May 2018 19:48:37 &#43;0000</pubDate>
    <author>Masimaro</author>
    <guid>http://HaiLateBoy.github.io/posts/oledb-and-ado-14/</guid>
    <description><![CDATA[在数据库查询中，我们主要使用的SQL语句，但是之前也说过，SQL语句需要经历解释执行的步骤，这样就会拖慢程序的运行速度，针对一些具体的简单查]]></description>
</item>
<item>
    <title>OLEDB 数据变更通知</title>
    <link>http://HaiLateBoy.github.io/posts/oledb-and-ado-13/</link>
    <pubDate>Fri, 04 May 2018 20:52:26 &#43;0000</pubDate>
    <author>Masimaro</author>
    <guid>http://HaiLateBoy.github.io/posts/oledb-and-ado-13/</guid>
    <description><![CDATA[除了之前介绍的接口，OLEDB还定义了其他一些支持回调的接口，可以异步操作OLEDB对象或者得到一些重要的事件通知,从而使应用程序有机会进行]]></description>
</item>
<item>
    <title>OLEDB 静态绑定和数据转化接口</title>
    <link>http://HaiLateBoy.github.io/posts/oledb-and-ado-12/</link>
    <pubDate>Fri, 27 Apr 2018 20:13:54 &#43;0000</pubDate>
    <author>Masimaro</author>
    <guid>http://HaiLateBoy.github.io/posts/oledb-and-ado-12/</guid>
    <description><![CDATA[OLEDB 提供了静态绑定和动态绑定两种方式，相比动态绑定来说，静态绑定在使用上更加简单，而在灵活性上不如动态绑定，动态绑定在前面已经介绍过了，本文主]]></description>
</item>
<item>
    <title>OLEDB存取BLOB型数据</title>
    <link>http://HaiLateBoy.github.io/posts/oledb-and-ado-11/</link>
    <pubDate>Fri, 20 Apr 2018 20:49:37 &#43;0000</pubDate>
    <author>Masimaro</author>
    <guid>http://HaiLateBoy.github.io/posts/oledb-and-ado-11/</guid>
    <description><![CDATA[现代数据库系统除了支持一些标准的通用数据类型以外，大多数还支持一种称之为BLOB型的数据。 BLOB全称为big large object bytes, 大二进制对象类型，这种类]]></description>
</item>
<item>
    <title>OLEDB不使用SQL语句直接打开数据表</title>
    <link>http://HaiLateBoy.github.io/posts/oledb-and-ado-10/</link>
    <pubDate>Sat, 14 Apr 2018 10:30:28 &#43;0000</pubDate>
    <author>Masimaro</author>
    <guid>http://HaiLateBoy.github.io/posts/oledb-and-ado-10/</guid>
    <description><![CDATA[一般来说获取数据库表的方法是采用类似 select * from table_name 这样的sql语句。SQL语句必然伴随着数据库的解释执行，一般来说效率比较低下，而且使用SQL语句]]></description>
</item>
</channel>
</rss>
